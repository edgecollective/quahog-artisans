import ujson as jsonimport urequests as requestsimport timeimport dhtimport machinefrom machine import Pinimport ssd1306from machine import I2Cimport onewire, ds18x20index=0i2c = I2C(-1, Pin(14), Pin(2))oled = ssd1306.SSD1306_I2C(128, 64, i2c)oled.fill(0)oled.text("  Q U A H O G",0,0)oled.text("Read config...",0,50)oled.show()time.sleep(1)f=open('/sd/wifi_config.csv')c=f.read()essid=c.split(',')[0].strip()psswd=c.split(',')[1].strip()f.close()f=open('/sd/farmos_config.csv')c=f.read()base_url=c.split(',')[0].strip()public_key=c.split(',')[1].strip()private_key=c.split(',')[2].strip()f.close()base_url='https://wolfesneck.farmos.net/farm/sensor/listener/'url = base_url+public_key+'?private_key='+private_keyheaders = {'Content-type':'application/json', 'Accept':'application/json'}print(essid,psswd)print(public_key,private_key)oled.fill(0)oled.text("  Q U A H O G",0,0)oled.text("Read sensors...",0,50)oled.show()time.sleep(1)# SENSOR SETUPdat = machine.Pin(5)d = dht.DHT22(machine.Pin(18))ds = ds18x20.DS18X20(onewire.OneWire(dat))roms = ds.scan()print('found devices:', roms)adc = machine.ADC(machine.Pin(35))def post_data(payload):    try:    	r = requests.post(url,data=json.dumps(payload),headers=headers)    except Exception as e:	print(e)	#r.close()	return "timeout"    else:	r.close()	print('Status', r.status_code)   	return r.status_codedef do_connect(essid,psswd):    import network    sta_if = network.WLAN(network.STA_IF)    if not sta_if.isconnected():        print('connecting to network...')        sta_if.active(False)        sta_if.active(True)        sta_if.connect(essid, psswd)        while not sta_if.isconnected():            pass    print('network config:', sta_if.ifconfig())#dht22:d.measure()t=d.temperature()h=d.humidity()# adcadc_val=adc.read()# form payloadpayload ={"temp_ambient": t,"humidity_ambient":h,"adc_val":adc_val}# add in onewireds.convert_temp()onewire_index=0onewire_vals=[]for rom in roms:    label="temp_probe_"+str(onewire_index)    time.sleep(1)    t_onewire=ds.read_temp(rom)    payload[label]=t_onewire    onewire_vals.append(t_onewire)    onewire_index=onewire_index+1    print(payload)t_str="{0:.2f}".format(t)h_str="{0:.2f}".format(h)onewire_index=0onewire_strings=[]for t1 in onewire_vals:    t1_str="{0:.2f}".format(t1)    onewire_strings.append(t1_str)print(onewire_strings)oled_str="no probes found"if len(onewire_strings)==1:    oled_str="t1:"+onewire_strings[0]if len(onewire_strings)>=2:    oled_str="t1:"+onewire_strings[0]+";t2:"+onewire_strings[1]    oled.fill(0)oled.text("  Q U A H O G",0,0)oled.text("t:"+t_str+";h:"+h_str,0,20)oled.text("a:"+str(adc_val),0,30)oled.text(oled_str,0,40)oled.text("Connect wifi...",0,50)oled.show()do_connect(essid,psswd)oled.fill(0)oled.text("  Q U A H O G",0,0)oled.text("t:"+t_str+";h:"+h_str,0,20)oled.text("a:"+str(adc_val),0,30)oled.text(oled_str,0,40)oled.text("Posting...",0,50)oled.show()status=post_data(payload)oled.fill(0)oled.text("  Q U A H O G",0,0)oled.text("t:"+t_str+";h:"+h_str,0,20)oled.text("a:"+str(adc_val),0,30)oled.text(oled_str,0,40)oled.text("Status:"+str(status),0,50)oled.show()